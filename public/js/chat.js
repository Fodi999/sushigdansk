'use strict';

document.addEventListener('DOMContentLoaded', () => {
    const socket = io();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    socket.on('chat history', function (messages) {
        if (Array.isArray(messages)) {
            messages.forEach(addMessageToChat);
        }
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
    socket.on('chat message', function (msg) {
        addMessageToChat(msg);
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∞–π–∫–æ–≤
    socket.on('like update', function ({ id, likes }) {
        updateLikeButton(id, likes);
    });

    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
     * @param {object} message - –°–æ–æ–±—â–µ–Ω–∏–µ, –≤–∫–ª—é—á–∞—é—â–µ–µ —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ª–∞–π–∫–∏ –∏ ID
     */
    function addMessageToChat({ _id, text, imageUrl, likes }) {
        const chatMessages = document.getElementById('chatMessages');
        if (!chatMessages) {
            console.error("–≠–ª–µ–º–µ–Ω—Ç #chatMessages –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.");
            return;
        }

        const messageCard = createMessageCard(_id, text, imageUrl, likes);
        chatMessages.appendChild(messageCard);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} id - ID —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} imageUrl - –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
     * @param {number} likes - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
     * @returns {HTMLElement} - –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    function createMessageCard(id, text, imageUrl, likes) {
        const messageCard = document.createElement('div');
        messageCard.className = 'message-card';

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (text) {
            const messageText = createMessageText(text);
            messageCard.appendChild(messageText);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (imageUrl) {
            const messageImage = createMessageImage(imageUrl);
            messageCard.appendChild(messageImage);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        const messageTimestamp = createMessageTimestamp();
        messageCard.appendChild(messageTimestamp);

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ª–∞–π–∫–∞
        const likeButton = createLikeButton(id, likes);
        messageCard.appendChild(likeButton);

        return messageCard;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—Å—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—Å—Ç–æ–º
     */
    function createMessageText(text) {
        const messageText = document.createElement('div');
        messageText.className = 'message-text';
        messageText.textContent = text;
        return messageText;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} imageUrl - –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
     * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    function createMessageImage(imageUrl) {
        const messageImage = document.createElement('img');
        messageImage.className = 'message-image';
        messageImage.src = imageUrl;
        messageImage.alt = "Image";
        return messageImage;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
     * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç —Å –≤—Ä–µ–º–µ–Ω–µ–º
     */
    function createMessageTimestamp() {
        const messageTimestamp = document.createElement('div');
        messageTimestamp.className = 'message-timestamp';
        messageTimestamp.textContent = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        return messageTimestamp;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ª–∞–π–∫–∞
     * @param {string} id - ID —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {number} likes - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
     * @returns {HTMLElement} - –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞
     */
    function createLikeButton(id, likes = 0) {
        const likeButton = document.createElement('button');
        likeButton.className = 'like-button';
        likeButton.textContent = `üëç ${likes}`;
        likeButton.setAttribute('data-id', id);
        likeButton.addEventListener('click', () => likeMessage(id, likeButton));
        return likeButton;
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ª–∞–π–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} id - ID —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {number} likes - –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
     */
    function updateLikeButton(id, likes) {
        const likeButton = document.querySelector(`.like-button[data-id="${id}"]`);
        if (likeButton) {
            likeButton.textContent = `üëç ${likes}`;
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ª–∞–π–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} messageId - ID —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {HTMLElement} likeButton - –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞
     */
    async function likeMessage(messageId, likeButton) {
        try {
            const response = await fetch(`/api/messages/${messageId}/like`, { method: 'POST' });
            if (response.ok) {
                const data = await response.json();
                likeButton.textContent = `üëç ${data.likes}`;
            } else {
                console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ª–∞–π–∫–∞');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–∞–π–∫–∞:', error);
        }
    }
});

